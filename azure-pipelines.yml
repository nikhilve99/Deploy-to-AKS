# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  imageRepository: sampleapp
  tag: '$(Build.BuildId)'
  imagePullSecret: 'coforgeregistry-auth'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an Image
      inputs:
        containerRegistry: 'coforgeregistry'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Pipeline.Workspace)/s/kubernetes'
        ArtifactName: 'menifests'
        publishLocation: 'Container'
- stage: Deploy
  displayName: Deploy on Dev
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'menifests'
        targetPath: '$(Pipeline.Workspace)/menifests'
    - task: KubernetesManifest@1
      inputs:
        action: 'createSecret'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'nik-aks-spring'
        namespace: 'spring'
        secretType: 'dockerRegistry'
        secretName: '$(imagePullSecret)'
        dockerRegistryEndpoint: 'coforgeregistry'
    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'nik-aks-spring'
        namespace: 'spring'
        manifests: |
          $(Pipeline.Workspace)/menifests/deployment.yml
          $(Pipeline.Workspace)/menifests/service.yml
        imagePullSecrets: |
          $(imagePullSecret)
        containers: |
          $(containerRegistry)/$(imageRepository):$(tag)
